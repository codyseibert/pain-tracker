{"version":3,"sources":["dist/hyperapp.js"],"names":["hyperapp","exports","EMPTY_OBJ","EMPTY_ARR","map","isArray","Array","defer","requestAnimationFrame","setTimeout","createClass","obj","out","length","tmp","k","merge","a","b","batch","list","reduce","item","concat","isSameAction","shouldRestart","patchProperty","node","key","oldValue","newValue","listener","isSvg","setProperty","actions","slice","toLowerCase","addEventListener","removeEventListener","removeAttribute","setAttribute","createNode","vdom","props","type","document","createTextNode","name","createElementNS","is","createElement","i","len","children","appendChild","getVNode","getKey","patch","parent","oldVNode","newVNode","nodeValue","insertBefore","removeChild","tmpVKid","oldVKid","oldKey","newKey","oldVProps","newVProps","oldVKids","newVKids","oldHead","newHead","oldTail","newTail","keyed","newKeyed","getTextVNode","createTextVNode","propsChanged","lazy","view","createVNode","value","undefined","recycleNode","nodeType","nodeName","call","childNodes","Lazy","app","state","lock","subscriptions","subs","event","dispatch","this","setState","newState","oldSubs","newSubs","oldSub","newSub","push","patchSubs","render","middleware","action","fx","parentNode","init","h","rest","arguments","pop"],"mappings":"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","sourcesContent":["var hyperapp = (function (exports) {\n  'use strict';\n\n  var RECYCLED_NODE = 1;\n  var LAZY_NODE = 2;\n  var TEXT_NODE = 3;\n  var EMPTY_OBJ = {};\n  var EMPTY_ARR = [];\n  var map = EMPTY_ARR.map;\n  var isArray = Array.isArray;\n  var defer =\n    typeof requestAnimationFrame !== \"undefined\"\n      ? requestAnimationFrame\n      : setTimeout;\n\n  var createClass = function(obj) {\n    var out = \"\";\n\n    if (typeof obj === \"string\") return obj\n\n    if (isArray(obj) && obj.length > 0) {\n      for (var k = 0, tmp; k < obj.length; k++) {\n        if ((tmp = createClass(obj[k])) !== \"\") {\n          out += (out && \" \") + tmp;\n        }\n      }\n    } else {\n      for (var k in obj) {\n        if (obj[k]) {\n          out += (out && \" \") + k;\n        }\n      }\n    }\n\n    return out\n  };\n\n  var merge = function(a, b) {\n    var out = {};\n\n    for (var k in a) out[k] = a[k];\n    for (var k in b) out[k] = b[k];\n\n    return out\n  };\n\n  var batch = function(list) {\n    return list.reduce(function(out, item) {\n      return out.concat(\n        !item || item === true\n          ? 0\n          : typeof item[0] === \"function\"\n          ? [item]\n          : batch(item)\n      )\n    }, EMPTY_ARR)\n  };\n\n  var isSameAction = function(a, b) {\n    return isArray(a) && isArray(b) && a[0] === b[0] && typeof a[0] === \"function\"\n  };\n\n  var shouldRestart = function(a, b) {\n    if (a !== b) {\n      for (var k in merge(a, b)) {\n        if (a[k] !== b[k] && !isSameAction(a[k], b[k])) return true\n        b[k] = a[k];\n      }\n    }\n  };\n\n  var patchSubs = function(oldSubs, newSubs, dispatch) {\n    for (\n      var i = 0, oldSub, newSub, subs = [];\n      i < oldSubs.length || i < newSubs.length;\n      i++\n    ) {\n      oldSub = oldSubs[i];\n      newSub = newSubs[i];\n      subs.push(\n        newSub\n          ? !oldSub ||\n            newSub[0] !== oldSub[0] ||\n            shouldRestart(newSub[1], oldSub[1])\n            ? [\n                newSub[0],\n                newSub[1],\n                newSub[0](dispatch, newSub[1]),\n                oldSub && oldSub[2]()\n              ]\n            : oldSub\n          : oldSub && oldSub[2]()\n      );\n    }\n    return subs\n  };\n\n  var patchProperty = function(node, key, oldValue, newValue, listener, isSvg) {\n    if (key === \"key\") ; else if (key === \"style\") {\n      for (var k in merge(oldValue, newValue)) {\n        oldValue = newValue == null || newValue[k] == null ? \"\" : newValue[k];\n        if (k[0] === \"-\") {\n          node[key].setProperty(k, oldValue);\n        } else {\n          node[key][k] = oldValue;\n        }\n      }\n    } else if (key[0] === \"o\" && key[1] === \"n\") {\n      if (\n        !((node.actions || (node.actions = {}))[\n          (key = key.slice(2).toLowerCase())\n        ] = newValue)\n      ) {\n        node.removeEventListener(key, listener);\n      } else if (!oldValue) {\n        node.addEventListener(key, listener);\n      }\n    } else if (!isSvg && key !== \"list\" && key in node) {\n      node[key] = newValue == null ? \"\" : newValue;\n    } else if (\n      newValue == null ||\n      newValue === false ||\n      (key === \"class\" && !(newValue = createClass(newValue)))\n    ) {\n      node.removeAttribute(key);\n    } else {\n      node.setAttribute(key, newValue);\n    }\n  };\n\n  var createNode = function(vdom, listener, isSvg) {\n    var ns = \"http://www.w3.org/2000/svg\";\n    var props = vdom.props;\n    var node =\n      vdom.type === TEXT_NODE\n        ? document.createTextNode(vdom.name)\n        : (isSvg = isSvg || vdom.name === \"svg\")\n        ? document.createElementNS(ns, vdom.name, { is: props.is })\n        : document.createElement(vdom.name, { is: props.is });\n\n    for (var k in props) {\n      patchProperty(node, k, null, props[k], listener, isSvg);\n    }\n\n    for (var i = 0, len = vdom.children.length; i < len; i++) {\n      node.appendChild(\n        createNode(\n          (vdom.children[i] = getVNode(vdom.children[i])),\n          listener,\n          isSvg\n        )\n      );\n    }\n\n    return (vdom.node = node)\n  };\n\n  var getKey = function(vdom) {\n    return vdom == null ? null : vdom.key\n  };\n\n  var patch = function(parent, node, oldVNode, newVNode, listener, isSvg) {\n    if (oldVNode === newVNode) ; else if (\n      oldVNode != null &&\n      oldVNode.type === TEXT_NODE &&\n      newVNode.type === TEXT_NODE\n    ) {\n      if (oldVNode.name !== newVNode.name) node.nodeValue = newVNode.name;\n    } else if (oldVNode == null || oldVNode.name !== newVNode.name) {\n      node = parent.insertBefore(\n        createNode((newVNode = getVNode(newVNode)), listener, isSvg),\n        node\n      );\n      if (oldVNode != null) {\n        parent.removeChild(oldVNode.node);\n      }\n    } else {\n      var tmpVKid;\n      var oldVKid;\n\n      var oldKey;\n      var newKey;\n\n      var oldVProps = oldVNode.props;\n      var newVProps = newVNode.props;\n\n      var oldVKids = oldVNode.children;\n      var newVKids = newVNode.children;\n\n      var oldHead = 0;\n      var newHead = 0;\n      var oldTail = oldVKids.length - 1;\n      var newTail = newVKids.length - 1;\n\n      isSvg = isSvg || newVNode.name === \"svg\";\n\n      for (var i in merge(oldVProps, newVProps)) {\n        if (\n          (i === \"value\" || i === \"selected\" || i === \"checked\"\n            ? node[i]\n            : oldVProps[i]) !== newVProps[i]\n        ) {\n          patchProperty(node, i, oldVProps[i], newVProps[i], listener, isSvg);\n        }\n      }\n\n      while (newHead <= newTail && oldHead <= oldTail) {\n        if (\n          (oldKey = getKey(oldVKids[oldHead])) == null ||\n          oldKey !== getKey(newVKids[newHead])\n        ) {\n          break\n        }\n\n        patch(\n          node,\n          oldVKids[oldHead].node,\n          oldVKids[oldHead],\n          (newVKids[newHead] = getVNode(\n            newVKids[newHead++],\n            oldVKids[oldHead++]\n          )),\n          listener,\n          isSvg\n        );\n      }\n\n      while (newHead <= newTail && oldHead <= oldTail) {\n        if (\n          (oldKey = getKey(oldVKids[oldTail])) == null ||\n          oldKey !== getKey(newVKids[newTail])\n        ) {\n          break\n        }\n\n        patch(\n          node,\n          oldVKids[oldTail].node,\n          oldVKids[oldTail],\n          (newVKids[newTail] = getVNode(\n            newVKids[newTail--],\n            oldVKids[oldTail--]\n          )),\n          listener,\n          isSvg\n        );\n      }\n\n      if (oldHead > oldTail) {\n        while (newHead <= newTail) {\n          node.insertBefore(\n            createNode(\n              (newVKids[newHead] = getVNode(newVKids[newHead++])),\n              listener,\n              isSvg\n            ),\n            (oldVKid = oldVKids[oldHead]) && oldVKid.node\n          );\n        }\n      } else if (newHead > newTail) {\n        while (oldHead <= oldTail) {\n          node.removeChild(oldVKids[oldHead++].node);\n        }\n      } else {\n        for (var i = oldHead, keyed = {}, newKeyed = {}; i <= oldTail; i++) {\n          if ((oldKey = oldVKids[i].key) != null) {\n            keyed[oldKey] = oldVKids[i];\n          }\n        }\n\n        while (newHead <= newTail) {\n          oldKey = getKey((oldVKid = oldVKids[oldHead]));\n          newKey = getKey(\n            (newVKids[newHead] = getVNode(newVKids[newHead], oldVKid))\n          );\n\n          if (\n            newKeyed[oldKey] ||\n            (newKey != null && newKey === getKey(oldVKids[oldHead + 1]))\n          ) {\n            if (oldKey == null) {\n              node.removeChild(oldVKid.node);\n            }\n            oldHead++;\n            continue\n          }\n\n          if (newKey == null || oldVNode.type === RECYCLED_NODE) {\n            if (oldKey == null) {\n              patch(\n                node,\n                oldVKid && oldVKid.node,\n                oldVKid,\n                newVKids[newHead],\n                listener,\n                isSvg\n              );\n              newHead++;\n            }\n            oldHead++;\n          } else {\n            if (oldKey === newKey) {\n              patch(\n                node,\n                oldVKid.node,\n                oldVKid,\n                newVKids[newHead],\n                listener,\n                isSvg\n              );\n              newKeyed[newKey] = true;\n              oldHead++;\n            } else {\n              if ((tmpVKid = keyed[newKey]) != null) {\n                patch(\n                  node,\n                  node.insertBefore(tmpVKid.node, oldVKid && oldVKid.node),\n                  tmpVKid,\n                  newVKids[newHead],\n                  listener,\n                  isSvg\n                );\n                newKeyed[newKey] = true;\n              } else {\n                patch(\n                  node,\n                  oldVKid && oldVKid.node,\n                  null,\n                  newVKids[newHead],\n                  listener,\n                  isSvg\n                );\n              }\n            }\n            newHead++;\n          }\n        }\n\n        while (oldHead <= oldTail) {\n          if (getKey((oldVKid = oldVKids[oldHead++])) == null) {\n            node.removeChild(oldVKid.node);\n          }\n        }\n\n        for (var i in keyed) {\n          if (newKeyed[i] == null) {\n            node.removeChild(keyed[i].node);\n          }\n        }\n      }\n    }\n\n    return (newVNode.node = node)\n  };\n\n  var propsChanged = function(a, b) {\n    for (var k in a) if (a[k] !== b[k]) return true\n    for (var k in b) if (a[k] !== b[k]) return true\n  };\n\n  var getTextVNode = function(node) {\n    return typeof node === \"object\" ? node : createTextVNode(node)\n  };\n\n  var getVNode = function(newVNode, oldVNode) {\n    return newVNode.type === LAZY_NODE\n      ? ((!oldVNode ||\n          (oldVNode.type !== LAZY_NODE ||\n            propsChanged(oldVNode.lazy, newVNode.lazy))) &&\n          ((oldVNode = getTextVNode(newVNode.lazy.view(newVNode.lazy))).lazy =\n            newVNode.lazy),\n        oldVNode)\n      : newVNode\n  };\n\n  var createVNode = function(name, props, children, node, key, type) {\n    return {\n      name: name,\n      props: props,\n      children: children,\n      node: node,\n      type: type,\n      key: key\n    }\n  };\n\n  var createTextVNode = function(value, node) {\n    return createVNode(value, EMPTY_OBJ, EMPTY_ARR, node, undefined, TEXT_NODE)\n  };\n\n  var recycleNode = function(node) {\n    return node.nodeType === TEXT_NODE\n      ? createTextVNode(node.nodeValue, node)\n      : createVNode(\n          node.nodeName.toLowerCase(),\n          EMPTY_OBJ,\n          map.call(node.childNodes, recycleNode),\n          node,\n          undefined,\n          RECYCLED_NODE\n        )\n  };\n\n  var Lazy = function(props) {\n    return {\n      lazy: props,\n      type: LAZY_NODE\n    }\n  };\n\n  var h = function(name, props) {\n    for (var vdom, rest = [], children = [], i = arguments.length; i-- > 2; ) {\n      rest.push(arguments[i]);\n    }\n\n    while (rest.length > 0) {\n      if (isArray((vdom = rest.pop()))) {\n        for (var i = vdom.length; i-- > 0; ) {\n          rest.push(vdom[i]);\n        }\n      } else if (vdom === false || vdom === true || vdom == null) ; else {\n        children.push(getTextVNode(vdom));\n      }\n    }\n\n    props = props || EMPTY_OBJ;\n\n    return typeof name === \"function\"\n      ? name(props, children)\n      : createVNode(name, props, children, undefined, props.key)\n  };\n\n  var app = function(props) {\n    var state = {};\n    var lock = false;\n    var view = props.view;\n    var node = props.node;\n    var vdom = node && recycleNode(node);\n    var subscriptions = props.subscriptions;\n    var subs = [];\n\n    var listener = function(event) {\n      dispatch(this.actions[event.type], event);\n    };\n\n    var setState = function(newState) {\n      if (state !== newState) {\n        state = newState;\n        if (subscriptions) {\n          subs = patchSubs(subs, batch([subscriptions(state)]), dispatch);\n        }\n        if (view && !lock) defer(render, (lock = true));\n      }\n      return state\n    };\n\n    var dispatch = (props.middleware ||\n      function(obj) {\n        return obj\n      })(function(action, props) {\n      return typeof action === \"function\"\n        ? dispatch(action(state, props))\n        : isArray(action)\n        ? typeof action[0] === \"function\" || isArray(action[0])\n          ? dispatch(\n              action[0],\n              typeof action[1] === \"function\" ? action[1](props) : action[1]\n            )\n          : (batch(action.slice(1)).map(function(fx) {\n              fx && fx[0](dispatch, fx[1]);\n            }, setState(action[0])),\n            state)\n        : setState(action)\n    });\n\n    var render = function() {\n      lock = false;\n      node = patch(\n        node.parentNode,\n        node,\n        vdom,\n        (vdom = getTextVNode(view(state))),\n        listener\n      );\n    };\n\n    dispatch(props.init);\n  };\n\n  exports.Lazy = Lazy;\n  exports.app = app;\n  exports.h = h;\n\n  return exports;\n\n}({}));\n//# sourceMappingURL=hyperapp.js.map\n"]}